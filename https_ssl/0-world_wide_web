#!/usr/bin/env bash
# This script checks the DNS records for subdomains and displays information about them

# Check if domain is provided
if [ -z "$1" ]; then
  echo "You must provide a domain."
  exit 1
fi

domain=$1

# Function to audit DNS record of a subdomain
audit_subdomain() {
  local subdomain=$1
  local domain=$2
  result=$(dig +short "$subdomain.$domain")
  
  if [ -z "$result" ]; then
    echo "No record found for $subdomain.$domain"
  else
    echo "The subdomain $subdomain is a A record and points to $result"
  fi
}

# If subdomain is provided, audit that subdomain
if [ -n "$2" ]; then
  audit_subdomain "$2" "$domain"
else
  # Otherwise, audit the default subdomains
  declare -A subdomains=(
    ["www"]="54.205.118.206"
    ["lb-01"]="54.205.118.206"
    ["web-01"]="3.93.150.32"
    ["web-02"]="3.82.149.138"
  )

  for subdomain in "${!subdomains[@]}"; do
    expected_ip=${subdomains[$subdomain]}
    result=$(dig +short "$subdomain.$domain")
    
    if [ -z "$result" ]; then
      echo "No record found for $subdomain.$domain"
    elif [ "$result" != "$expected_ip" ]; then
      echo "The subdomain $subdomain is a A record and points to $result (expected: $expected_ip)"
    else
      echo "The subdomain $subdomain is a A record and points to $result"
    fi
  done
fi
